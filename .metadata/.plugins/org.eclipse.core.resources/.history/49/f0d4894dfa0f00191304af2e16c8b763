package com.cap.productsvalidation.testsstepmanagement.assertstepmanagement.logic.api;

import com.cap.productsvalidation.testsstepmanagement.assertstepmanagement.logic.api.to.AssertstepCto;
import com.cap.productsvalidation.testsstepmanagement.assertstepmanagement.logic.api.to.AssertstepEto;
import com.cap.productsvalidation.testsstepmanagement.assertstepmanagement.logic.api.to.AssertstepSearchCriteriaTo;

import io.oasp.module.jpa.common.api.to.PaginatedListTo;

/**
 * Interface for Assertstepmanagement component.
 */
public interface Assertstepmanagement {

	/**
	 * Returns a Assertstep by its id 'id'.
	 *
	 * @param id
	 *            The id 'id' of the Assertstep.
	 * @return The {@link AssertstepEto} with id 'id'
	 */
	AssertstepEto findAssertstep(Long id);

	/**
	 * Returns a paginated list of Assertsteps matching the search criteria.
	 *
	 * @param criteria
	 *            the {@link AssertstepSearchCriteriaTo}.
	 * @return the {@link List} of matching {@link AssertstepEto}s.
	 */
	PaginatedListTo<AssertstepEto> findAssertstepEtos(AssertstepSearchCriteriaTo criteria);

	/**
	 * Deletes a assertstep from the database by its id 'assertstepId'.
	 *
	 * @param assertstepId
	 *            Id of the assertstep to delete
	 * @return boolean <code>true</code> if the assertstep can be deleted,
	 *         <code>false</code> otherwise
	 */
	boolean deleteAssertstep(Long assertstepId);

	/**
	 * Saves a assertstep and store it in the database.
	 *
	 * @param assertstep
	 *            the {@link AssertstepEto} to create.
	 * @return the new {@link AssertstepEto} that has been saved with ID and
	 *         version.
	 */
	AssertstepEto saveAssertstep(AssertstepEto assertstep);

	/**
	 * Returns a composite Assertstep by its id 'id'.
	 *
	 * @param id
	 *            The id 'id' of the Assertstep.
	 * @return The {@link AssertstepCto} with id 'id'
	 */
	AssertstepCto findAssertstepCto(Long id);

	/**
	 * Returns a paginated list of composite Assertsteps matching the search
	 * criteria.
	 *
	 * @param criteria
	 *            the {@link AssertstepSearchCriteriaTo}.
	 * @return the {@link List} of matching {@link AssertstepCto}s.
	 */
	PaginatedListTo<AssertstepCto> findAssertstepCtos(AssertstepSearchCriteriaTo criteria);

}