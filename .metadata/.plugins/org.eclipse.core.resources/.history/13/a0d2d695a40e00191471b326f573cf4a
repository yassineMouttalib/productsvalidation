package com.cap.productsvalidation.testsstepmanagement.reststepmanagement.dataaccess.impl.dao;

import java.util.List;

import com.cap.productsvalidation.testsstepmanagement.general.common.api.constants.NamedQueries;
import com.cap.productsvalidation.testsstepmanagement.general.dataaccess.base.dao.ApplicationDaoImpl;
import com.cap.productsvalidation.testsstepmanagement.reststepmanagement.dataaccess.api.dao.ReststepDao;
import com.cap.productsvalidation.testsstepmanagement.reststepmanagement.dataaccess.api.ReststepEntity;
import com.cap.productsvalidation.testsstepmanagement.reststepmanagement.logic.api.to.ReststepSearchCriteriaTo;

import io.oasp.module.jpa.common.api.to.PaginatedListTo;

import javax.inject.Named;

import com.mysema.query.alias.Alias;
import com.mysema.query.jpa.impl.JPAQuery;
import com.mysema.query.types.path.EntityPathBase;

/**
 * This is the implementation of {@link ReststepDao}.
 */
@Named
public class ReststepDaoImpl extends ApplicationDaoImpl<ReststepEntity> implements ReststepDao {

	/**
	* The constructor.
	*/
	public ReststepDaoImpl() {

		super();
	}

  @Override
  public Class<ReststepEntity> getEntityClass() {
  	return ReststepEntity.class;
 	}

 	@Override
  public PaginatedListTo<ReststepEntity> findReststeps(ReststepSearchCriteriaTo criteria) {

    ReststepEntity reststep = Alias.alias(ReststepEntity.class);
    EntityPathBase<ReststepEntity> alias = Alias.$(reststep);
    JPAQuery query = new JPAQuery(getEntityManager()).from(alias);

        String url = criteria.getUrl();
if (url != null) {
query.where(Alias.$(reststep.getUrl()).eq(url));
}    addOrderBy(query, alias, reststep, criteria.getSort());

    return findPaginated(criteria, query, alias);
  }

  private void addOrderBy(JPAQuery query, EntityPathBase<ReststepEntity> alias, ReststepEntity reststep, List<OrderByTo> sort) {
    if (sort != null && !sort.isEmpty()) {
      for (OrderByTo orderEntry : sort) {
        switch(orderEntry.getName()) {
          case "url":
            if (OrderDirection.ASC.equals(orderEntry.getDirection())) {
                query.orderBy(Alias.$(reststep.getUrl()).asc());
            } else {
                query.orderBy(Alias.$(reststep.getUrl()).desc());
            }   
          break;
        }
      }
    }
  }

}