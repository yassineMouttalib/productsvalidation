package com.cap.productsvalidation.productvalidationmanagement.logic.api;

import com.cap.productsvalidation.productvalidationmanagement.logic.api.to.ProductValidationEto;
import com.cap.productsvalidation.productvalidationmanagement.logic.api.to.ProductValidationSearchCriteriaTo;
import io.oasp.module.jpa.common.api.to.PaginatedListTo;

/**
 * Interface for Productvalidationmanagement component.
 */
public interface Productvalidationmanagement {
  
  /**
   * Returns a ProductValidation by its id 'id'.
   *
   * @param id The id 'id' of the ProductValidation.
   * @return The {@link ProductValidationEto} with id 'id'
   */
  ProductValidationEto findProductValidation(Long id);
  
	/**
   * Returns a paginated list of ProductValidations matching the search criteria.
   *
   * @param criteria the {@link ProductValidationSearchCriteriaTo}.
   * @return the {@link List} of matching {@link ProductValidationEto}s.
   */
	PaginatedListTo<ProductValidationEto> findProductValidationEtos(ProductValidationSearchCriteriaTo criteria);
	
	/**
   * Deletes a productValidation from the database by its id 'productValidationId'.
   *
   * @param productValidationId Id of the productValidation to delete
   * @return boolean <code>true</code> if the productValidation can be deleted, <code>false</code> otherwise
   */
  boolean deleteProductValidation(Long productValidationId);
  
	/**
   * Saves a productValidation and store it in the database.
   *
   * @param productValidation the {@link ProductValidationEto} to create.
   * @return the new {@link ProductValidationEto} that has been saved with ID and version.
   */
  ProductValidationEto saveProductValidation(ProductValidationEto productValidation);
  
    /**
   * Returns a composite ProductValidation by its id 'id'.
   *
   * @param id The id 'id' of the ProductValidation.
   * @return The {@link ProductValidationCto} with id 'id'
   */
  ProductValidationCto findProductValidationCto(Long id);
  
  /**
   * Returns a paginated list of composite ProductValidations matching the search criteria.
   *
   * @param criteria the {@link ProductValidationSearchCriteriaTo}.
   * @return the {@link List} of matching {@link ProductValidationCto}s.
   */
  PaginatedListTo<ProductValidationCto> findProductValidationCtos(ProductValidationSearchCriteriaTo criteria);
  
}